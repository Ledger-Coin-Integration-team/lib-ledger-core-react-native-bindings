// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from idl.djinni

#import "RCTCoreLGAlgorandParticipationInfo.h"
#import "LGAlgorandParticipationInfo.h"

@implementation RCTCoreLGAlgorandParticipationInfo

//Export module
RCT_EXPORT_MODULE(RCTCoreLGAlgorandParticipationInfo)

@synthesize bridge = _bridge;

+ (BOOL)requiresMainQueueSetup
{
    return NO;
}
RCT_REMAP_METHOD(release, release:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseRelease:currentInstance withResolver: resolve rejecter:reject];
}
RCT_REMAP_METHOD(log, logWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseLogWithResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(flush, flushWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseFlushWithResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(isNull, isNull:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
{
    [self baseIsNull:currentInstance withResolver:resolve rejecter:reject];
}
RCT_REMAP_METHOD(init, initWithRootPublicKey:(nonnull NSString *)rootPublicKey
                                vrfPublicKey:(nonnull NSString *)vrfPublicKey
                             voteKeyDilution:(nonnull NSString *)voteKeyDilution
                              voteFirstRound:(nonnull NSString *)voteFirstRound
                               voteLastRound:(nonnull NSString *)voteLastRound withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {


    LGAlgorandParticipationInfo * finalResult = [[LGAlgorandParticipationInfo alloc] initWithRootPublicKey:rootPublicKey vrfPublicKey:vrfPublicKey voteKeyDilution:voteKeyDilution voteFirstRound:voteFirstRound voteLastRound:voteLastRound];
    NSString *uuid = [[NSUUID UUID] UUIDString];
    RCTCoreLGAlgorandParticipationInfo *rctImpl = (RCTCoreLGAlgorandParticipationInfo *)[self.bridge moduleForName:@"CoreLGAlgorandParticipationInfo"];
    NSArray *finalResultArray = [[NSArray alloc] initWithObjects:finalResult, uuid, nil];
    [rctImpl baseSetObject:finalResultArray];
    NSDictionary *result = @{@"type" : @"CoreLGAlgorandParticipationInfo", @"uid" : uuid };
    if (result)
    {
        resolve(result);
    }
}

RCT_REMAP_METHOD(getRootPublicKey, getRootPublicKey:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGAlgorandParticipationInfo *objcImpl = (LGAlgorandParticipationInfo *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.rootPublicKey};
    resolve(result);
}

RCT_REMAP_METHOD(getVrfPublicKey, getVrfPublicKey:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGAlgorandParticipationInfo *objcImpl = (LGAlgorandParticipationInfo *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.vrfPublicKey};
    resolve(result);
}

RCT_REMAP_METHOD(getVoteKeyDilution, getVoteKeyDilution:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGAlgorandParticipationInfo *objcImpl = (LGAlgorandParticipationInfo *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.voteKeyDilution};
    resolve(result);
}

RCT_REMAP_METHOD(getVoteFirstRound, getVoteFirstRound:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGAlgorandParticipationInfo *objcImpl = (LGAlgorandParticipationInfo *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.voteFirstRound};
    resolve(result);
}

RCT_REMAP_METHOD(getVoteLastRound, getVoteLastRound:(NSDictionary *)currentInstance withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)rejecter)
{
    LGAlgorandParticipationInfo *objcImpl = (LGAlgorandParticipationInfo *)[self.objcImplementations objectForKey:currentInstance[@"uid"]];
    NSDictionary *result = @{@"value" : objcImpl.voteLastRound};
    resolve(result);
}

@end
