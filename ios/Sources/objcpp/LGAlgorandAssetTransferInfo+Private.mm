// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from idl.djinni

#import "LGAlgorandAssetTransferInfo+Private.h"
#import "DJIMarshal+Private.h"
#include <cassert>

namespace djinni_generated {

auto AlgorandAssetTransferInfo::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni::String::toCpp(obj.assetId),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.amount),
            ::djinni::String::toCpp(obj.recipientAddress),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.closeAddress),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.clawedBackAddress),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.closeAmount)};
}

auto AlgorandAssetTransferInfo::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[LGAlgorandAssetTransferInfo alloc] initWithAssetId:(::djinni::String::fromCpp(cpp.assetId))
                                                         amount:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.amount))
                                               recipientAddress:(::djinni::String::fromCpp(cpp.recipientAddress))
                                                   closeAddress:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.closeAddress))
                                              clawedBackAddress:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.clawedBackAddress))
                                                    closeAmount:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.closeAmount))];
}

}  // namespace djinni_generated
